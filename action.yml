name: 'blender addon build'
description: 'action to automatically build the blender add-on and store the resulting .zip artifact.'
author: 'andreas gajdosik, blenderkit'
branding:
  icon: 'box'
  color: 'orange'
inputs:
  name:
    description: 'name of the add-on. used for the name of the build. if left empty, repository name will be used automatically.'
    default: ''
  name-suffix:
    description: 'name suffix. none (name.zip), commit hash (name-abc123.zip), pr number with datetime (name-pr123-date_time.zip).'
    choices: [ 'none', 'commit-hash', 'pr-time']
    default: 'none'
  build-command:
    description: 'command to build the add-on.'
    default: ''
  build-location:
    description: 'path to directory, which will be zipped.'
    default: './'
  do-checkout:
    decsription: 'should the action checkout the repository?'
    choices: [ 'true', 'false' ]
    default: 'true'
  exclude-files:
    description: 'list of file paths (relative to build-location) to exclude from the build. use semicolon as separator e.g. "file1;dir/file2;dir2/file3".'
    default: '.git'
runs:
  using: "composite"
  steps:
    - name: checkout repository
      if: ${{ inputs.do-checkout == 'true' }}
      uses: actions/checkout@v3
    - name: get-date
      run: echo "date=$(date +'%y-%m-%d--%h-%m-%s')" >> $github_env
      shell: bash

    # prepare name
    - name: use name from input
      if: ${{ inputs.name != '' }}
      run: echo "artifact_name=${{ inputs.name }}" >> $github_env
      shell: bash
    - name: use repository name
      if: ${{ inputs.name == '' }}  
      run: echo "artifact_name=${{ github.event.repository.name }}" >> $github_env
      shell: bash

    # prepare name suffixes
    - name: prepare artifact name without suffix
      if: ${{ inputs.name-suffix == 'none' }}
      run: echo "artifact_name=${{ env.artifact_name }}" >> $github_env
      shell: bash
    - name: prepare artifact name with pr-time suffix
      if: ${{ inputs.name-suffix == 'pr-time' }}
      run: echo "artifact_name=${{ env.artifact_name }}-pr${{ github.event.number }}-${{ env.date }}" >> $github_env
      shell: bash
    - name: prepare artifact name with commit-hash suffix
      if: ${{ inputs.name-suffix == 'commit-hash' }}
      run: echo "artifact_name=${{ env.artifact_name }}-${{ github.sha }}" >> $github_env
      shell: bash

    # build if provided
    - name: build the add-on
      if: ${{ inputs.build-command != '' }}
      run: |
        ${{ inputs.build-command }}
      shell: bash

    # remove excluded files
    - name: remove excluded files
      run: |
        ifs=';' read -ra file_array <<< "${{ inputs.exclude-files }}"
        for file in "${file_array[@]}"; do
          rm -rf .//$file
        done
      shell: bash

    ## store the build
    #- name: store the build
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: ${{ env.artifact_name }}
    #    path: ${{ inputs.build-location }}

    # create release of current build
    - name: create release of current build
      uses: softprops/action-gh-release@v2
        with:
          files: ${{ inputs.build-location }}

